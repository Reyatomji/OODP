#include <iostream>
using namespace std;
class decimal
{
	private:
		int i=1,j=n,n,T4Tutorials_decimal=n,T4Tutorials_binary=0;
	public:
			int deci()
			{
				cout<<"decimal number";
				cin>>n;
			}
			int bin()
			{
				for(j=n;j>0;j=j/2)
				{
					T4Tutorials_binary=T4Tutorials_binary+(n%2)*i;
					i=i*10;
					n=n/2;
				}
				cout<<("T4Tutorials_binary=",T4Tutorials_decimal,T4Tutorials_binary);
			}
		};
		int main()
		{
			decimal A;
			A.deci();
			A.bin();
		}












#include<iostream>
using namespace std;
class Floyds_Triangle
{
	public:
		int i,j,p,q,n;
		public:
//constructor
			Floyds_Triangle()         			{
             	cout<<"Please enter the no of rows";
	            cin>>n;
               	for(i=1;i<=n;i++)
             	{
		if(i%2==0)
		{
			p=1;
			q=0;
		}
		else
		{
			p=0;
			q=1;
		}
		for(j=1;j<=i;j++)
		{
			if(j%2==0)
			{
				cout<<p;
			}
			else
			{
				cout<<q;
			}
		}
		cout<<endl;
	}
}
	Floyds_Triangle()       // destructor
	{
	}
};
int main()
{
	Floyds_Triangle object;
	return 0;
}




















#include<iostream>
#include<conio.h>
using namespace std;
class T4Tutorialst
{
	private:
		int i,n;
		public:
			T4Tutorialst()
	        {
	        	i=1;
	        	n=0;
	        }
	        T4Tutorialst(int p, int q)
	        {
	        	i=p;
	        	n=q;
			}
			void display()
			{
				cout<<"enter the number :"<<endl;
				cin>>n;
				for(i=1; i<=n; i++)
				{
							cout<<" The cube of"<<i<<"is ="<<(i*i*i)<<endl;
					
				}
			}
			~T4Tutorialst()
			{
				cout<<" clear :"<<endl;
			}
		};
int main()
   {
   	int p,q;
	T4Tutorialst obj(p,q);
	obj.display();
	getch();
}
















#include<iostream>

using namespace std;



class cube

{

            public:

                        double side;

                        double volume()

                        {

                            return(side*side*side);

                        }

                        cube(double side1)

                        {

                            cout << "\nA constructor is called" << endl;

                            side=side1;

                        }

                        cube()

                        {

                            cout << "\nA default constructor is called " << endl;

                        }

                        ~cube()

                        {

                            cout << "\nDestructing " << side << endl;

                        }

};



int main()

{

            cube c1(2.34);

            cube c2;

            cout << "\nThe side of the cube is: " << c1.side << endl;

            cout << "\nThe volume of the first cube is : " << c1.volume() << endl;

            cout << "\nEnter the length of the second cube : " ;

            cin >> c2.side;

            cout << "\nThe volume of second cube is : " << c2.volume() << endl;

            return(0);

}




#include<iostream>
using namespace  std;
class pyramid
{
	int r,T4Tutorials,show,n;
	public:
		pyramid()
		{
			n=0;
		}
		pyramid(int s)
		{
		n=s;
		}
		void sol()
		{
			for(r=1;r<=n;r++)
			{
				for(T4Tutorials=1;T4Tutorials<=n;T4Tutorials++)
				{
					cout<<" ";
				}
				n--;
				for(show=1;show<=r;show++)
				{
					cout<<" "<<r;
				}
				cout<<endl;
			}
		}
};
int main()
{
	pyramid obj1(8);
	pyramid obj2(7);
	cout<<"first pyramid"<<endl;
	obj1.sol();
	cout<<"second pyramid"<<endl;
	obj2.sol();
}